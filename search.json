[{"path":"https://soylentorange.github.io/sdarr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sdarr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://soylentorange.github.io/sdarr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Wendlandt. Author, maintainer. UKSH. Copyright holder, funder. BMBF. Funder.","code":""},{"path":"https://soylentorange.github.io/sdarr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wendlandt R (2023). sdarr: Slope Determination Analysis Residuals. R package version 0.2.0, https://soylentorange.github.io/sdarr/.","code":"@Manual{,   title = {sdarr: Slope Determination by Analysis of Residuals},   author = {Robert Wendlandt},   year = {2023},   note = {R package version 0.2.0},   url = {https://soylentorange.github.io/sdarr/}, }"},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"sdarr","dir":"","previous_headings":"","what":"Slope Determination by Analysis of Residuals","title":"Slope Determination by Analysis of Residuals","text":"sdarr-package provides R implementation SDAR algorithm Slope Determination Analysis Residuals standardized ASTM E3076-18. allows automated objective linear-fitting mechanical test-data. See detailed description original algorithm NIST Technical Note 2050 E. Lucon. original algorithm heavily uses linear regressions, faster version implemented , finds optimum region linear fitting random sub-sampling.","code":""},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Slope Determination by Analysis of Residuals","text":"can install development version sdarr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"soylentOrange/sdarr\")"},{"path":[]},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"sdarr-1","dir":"","previous_headings":"Examples","what":"sdarr","title":"Slope Determination by Analysis of Residuals","text":"Basic example sdarr-function synthetic data set, based properties aluminium (Al 6060 T66) given Metallic Material Properties Development Standardization (MMPDS) Handbook. toe-region non-zero intercept added make test data less boring. sdarr-function analyzes data give small report message. confirm Young’s-modulus 68 GPa intercept 10 MPa. make use multi-core processing, configure furrr use multisession strategy (see next example).","code":"library(sdarr)  # setup multisession calculations with a maximum of 8 cores  # (or however many cores are available...) future::plan(future::multisession,               workers = min(c(parallelly::availableCores(), 8)))  # Synthesize a test record resembling Al 6060 T66 # (Values from MMPDS Handbook, with a toe region added) Al_6060_T66 <- synthesize_test_data(slope = 68000, yield.y = 160,                                      ultimate.y = 215, ultimate.x = 0.091,                                     offset = 10,                                     toe.initial.y = 3, toe.max.y = 15,                                     toe.initial.slope = 34000)  # Analyze the test record Al_6060_T66.result <- sdarr(Al_6060_T66, x = strain, y = stress,                              verbose = \"r\", showPlots = \"r\") #> Determination of Slope in the Linear Region of a Test Record: #> SDAR-algorithm #>   Data Quality Metric: Digital Resolution #>     x #>       Relative x-Resolution:   0.333333333333333 #>       % at this resolution:    0 #>       % in zeroth bin:         100 #>       --> pass #>     y #>       Relative y-Resolution:   0.333333333333333 #>       % at this resolution:    1.19402985074627 #>       % in zeroth bin:         98.8059701492537 #>       --> pass #>   Data Quality Metric: Noise #>     x #>       Relative x-Noise:        1.12835262887974e-14 #>       --> pass #>     y #>       Relative y-Noise:        0.0590566035999252 #>       --> pass #>   Fit Quality Metric: Curvature #>     1st Quartile #>       Relative Residual Slope: 0.00112596960003188 #>       Number of Points:        40 #>       --> pass #>     4th Quartile #>       Relative Residual Slope: -0.00682689398113825 #>       Number of Points:        40 #>       --> pass #>   Fit Quality Metric: Fit Range #>       relative fit range:      0.800879700901693 #>       --> pass #>   Un-normalized fit #>       Final Slope:             67999.5684247684 MPa #>       True Intercept:          10.0022190872361 MPa #>       y-Range:                 24.7366333007812 MPa - 84.4049072265625 MPa"},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"sdarrlazy","dir":"","previous_headings":"Examples","what":"sdarr.lazy","title":"Slope Determination by Analysis of Residuals","text":"Basic example lazy variant sdarr-function synthetic data set, based properties aluminium (Al 6060 T66) given Metallic Material Properties Development Standardization (MMPDS) Handbook. toe-region non-zero intercept added make test data less boring. sdarr.lazy-function analyzes data give small report message. confirm Young’s-modulus 68 GPa intercept 10 MPa. data set rather short, enforce random sub-sampling setting enforce_subsampling TRUE. make use multi-core processing, configure furrr use multisession strategy.","code":"library(sdarr)  # setup multisession calculations with a maximum of 8 cores  # (or however many cores are available...) future::plan(future::multisession,               workers = min(c(parallelly::availableCores(), 8)))  # Synthesize a test record resembling Al 6060 T66 # (Values from MMPDS Handbook, with a toe region added) Al_6060_T66 <- synthesize_test_data(slope = 68000, yield.y = 160,                                      ultimate.y = 215, ultimate.x = 0.091,                                     offset = 10,                                     toe.initial.y = 3, toe.max.y = 15,                                     toe.initial.slope = 34000)  # Analyze the test record Al_6060_T66.result.lazy <- sdarr.lazy(Al_6060_T66, x = strain, y = stress,                                       enforce_subsampling = T,                                       verbose = \"r\", showPlots = \"r\") #> Determination of Slope in the Linear Region of a Test Record: #>   Random sub-sampling will require more computation effort than standard SDAR-algorithm:   #>     173580 vs. 36856 fits. #>   Anyways, random sub-sampling will be used... #> Random sub-sampling mofification of the SDAR-algorithm #>   100 % of sub-sampled normalized ranges passed the data quality checks. #>   100 % of linear regressions passed the fit quality checks. #>   100 % of linear regressions passed all quality checks. #>   Data Quality Metric: Digital Resolution #>     x #>       Relative x-Resolution:   0.333333333333333 #>       % at this resolution:    0 #>       % in zeroth bin:         100 #>       --> pass #>     y #>       Relative y-Resolution:   0.333333333333333 #>       % at this resolution:    1.19402985074627 #>       % in zeroth bin:         98.8059701492537 #>       --> pass #>   Data Quality Metric: Noise #>     x #>       Relative x-Noise:        1.12835262887974e-14 #>       --> pass #>     y #>       Relative y-Noise:        0.0590566035999252 #>       --> pass #>   Fit Quality Metric: Curvature #>     1st Quartile #>       Relative Residual Slope: 0.00256415820575556 #>       Number of Points:        40 #>       --> pass #>     4th Quartile #>       Relative Residual Slope: -0.00688798683981675 #>       Number of Points:        40 #>       --> pass #>   Fit Quality Metric: Fit Range #>       relative fit range:      0.805842000442576 #>       --> pass #>   Un-normalized fit #>       Final Slope:             67999.776210731 MPa #>       True Intercept:          10.0020521296595 MPa #>       y-Range:                 25.1040649414062 MPa - 84.4049072265625 MPa"},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"plot-functions","dir":"","previous_headings":"Examples","what":"plot functions","title":"Slope Determination by Analysis of Residuals","text":"sdarr-function create diagnostic plots throughout calculations, shown requested (.e. set showPlots = “). plot drawn later, can call provided plot-functions results, set savePlots = TRUE. plots crated functions (see carrier), can easily tap environment function convert eg. ggplot2-graphic.","code":"library(sdarr) # satisfy pipe addiction... library(magrittr) # make nice and shiny graphics withh ggplot2... library(ggplot2)  # setup multisession calculations with a maximum of 8 cores  # (or however many cores are available...) future::plan(future::multisession,               workers = min(c(parallelly::availableCores(), 8)))  # Synthesize a test record resembling Al 6060 T66 # (Values from MMPDS Handbook, with a toe region added) Al_6060_T66 <- synthesize_test_data(slope = 68000, yield.y = 160,                                      ultimate.y = 215, ultimate.x = 0.091,                                     offset = 10,                                     toe.initial.y = 3, toe.max.y = 15,                                     toe.initial.slope = 34000)  # Analyze the test record using the standard algorithm Al_6060_T66.result <- sdarr(Al_6060_T66, x = strain, y = stress,                             verbose = \"n\", showPlots = \"n\", savePlots = TRUE)  # show plot of final fit using the plot function from the result Al_6060_T66.result$plots$final.fit() # plot fit using ggplot2  {   # tap the environment of the crated plot-function   plot.env <- rlang::fn_env(Al_6060_T66.result$plots$final.fit)      # get data and labels   plot.data <- plot.env$plot.data   plot.main <- plot.env$plot.main   plot.xlab <- plot.env$plot.xlab   plot.ylab <- plot.env$plot.ylab   y.data.max <- plot.data$y.data %>% max()      # create the ggplot2   plot.data %>% ggplot(aes(x = x.data, y = y.data, color = \"Al_6060_T66\")) +     geom_line() +     geom_line(data = plot.data %>%                  dplyr::filter(y.fit <= y.data.max),               aes(x = x.data, y = y.fit, color = \"fit (SDAR)\")) +     theme_bw() +     labs(title = plot.main,        x = plot.xlab,        y = plot.ylab) }"},{"path":"https://soylentorange.github.io/sdarr/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Slope Determination by Analysis of Residuals","text":"sdarr-package created analysis mechanical test data project LOBio, funded German ministry education research (BMBF) grant number 13XP5174C.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":null,"dir":"Reference","previous_headings":"","what":"sdarr — sdarr","title":"sdarr — sdarr","text":"Run SDAR algorithm standardized ASTM E3076-18.   use numerous linear regressions (.lm.fit form stats-package) can   painfully slow test data high resolution.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sdarr — sdarr","text":"","code":"sdarr(data, x, y, verbose = \"report\", showPlots = \"report\", savePlots = F)"},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sdarr — sdarr","text":"data Data record analyze. Labels data columns used units. x Use tidy selection specify x within data. y Use tidy selection specify y within data. verbose Give informational messages computation defaults \"report\" show summarizing information set \"\" also give messages individual steps set \"none\" quiet. Can abbreviated. showPlots Show plots computation defaults \"report\" show plot final fit set \"\" also show plots individual steps set \"none\" quiet. Can abbreviated. savePlots Give plot functions result","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sdarr — sdarr","text":"list containing data-frame results final fit,   list quality- fit-metrics, list containing crated   plot-functions (savePlots set TRUE).","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"sdarr — sdarr","text":"function use parallel processing via furrr-package use   feature, set plan default sequential strategy   beforehand.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"sdarr — sdarr","text":"Lucon, E. (2019). Use validation slope determination analysis residuals (SDAR) algorithm (NIST TN 2050; p. NIST TN 2050). National Institute Standards Technology. https://doi.org/10.6028/NIST.TN.2050 Standard Practice Determination Slope Linear Region Test Record (ASTM E3076-18). (2018). https://doi.org/10.1520/E3076-18","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":null,"dir":"Reference","previous_headings":"","what":"sdarr.lazy — sdarr.lazy","title":"sdarr.lazy — sdarr.lazy","text":"Run random sub-sampling modification SDAR algorithm   originally standardized ASTM E3076-18. original version uses   numerous linear regressions (.lm.fit form stats-package), can   painfully slow test data high resolution. lazy variant   algorithm use several random sub-samples data find best   estimate fit-range within data.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sdarr.lazy — sdarr.lazy","text":"","code":"sdarr.lazy(   data,   x,   y,   fit.rep = 5,   fit.candidates = 20,   cutoff_probability = 0.975,   quality_penalty = 0.1,   enforce_subsampling = F,   verbose = \"report\",   showPlots = \"report\",   savePlots = F )"},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sdarr.lazy — sdarr.lazy","text":"data Data record analyze. Labels data columns used units. x Use tidy selection specify x within data. y Use tidy selection specify y within data. fit.rep Repetitions random sub-sampling fitting. fit.candidates Give number selecting optimum fit candidates (ordered decreasingly normalized residuals) repetitions random sub-sampling. cutoff_probability Cut-probability estimating optimum size sub-sampled data range via logistic regression. quality_penalty Factor -weight fits inferior data- fit-quality metrics. enforce_subsampling Set TRUE, use sub-sampling method even computationally expensive standard SDAR-algorithm. verbose Give informational messages computation defaults \"report\" show summarizing information set \"\" also give messages individual steps set \"none\" quiet. Can abbreviated. showPlots Show plots computation defaults \"report\" show plot final fit set \"\" also show plots individual steps set \"none\" quiet. Can abbreviated. savePlots Give plot functions result.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sdarr.lazy — sdarr.lazy","text":"list containing data-frame results final fit,   list quality- fit-metrics, list containing crated   plot-functions (savePlots set TRUE).","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"sdarr.lazy — sdarr.lazy","text":"function use parallel processing via furrr-package use   feature, set plan default sequential strategy   beforehand.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/sdarr.lazy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"sdarr.lazy — sdarr.lazy","text":"Lucon, E. (2019). Use validation slope determination   analysis residuals (SDAR) algorithm (NIST TN 2050; p. NIST TN   2050). National Institute Standards Technology.   https://doi.org/10.6028/NIST.TN.2050 Standard Practice Determination Slope Linear   Region Test Record (ASTM E3076-18). (2018).   https://doi.org/10.1520/E3076-18","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthesize Test Data — synthesize_test_data","title":"Synthesize Test Data — synthesize_test_data","text":"Synthesize Test Data Ramberg-Osgood-Equation.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthesize Test Data — synthesize_test_data","text":"","code":"synthesize_test_data(   slope,   yield.y,   yield.xp = 0.002,   ultimate.y,   ultimate.x,   offset = 0,   toe.initial.y = 0,   toe.initial.slope = slope,   toe.max.y = 0,   enob.x = 14,   enob.y = 14,   enob.x_FS = 16,   enob.y_FS = 16,   enob.x_noise = 0,   enob.y_noise = 0,   x.name = \"strain\",   y.name = \"stress\",   x.unit = NULL,   y.unit = \"MPa\" )"},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synthesize Test Data — synthesize_test_data","text":"slope Slope linear region. yield.y y-value yield point. yield.xp Plastic deformation yield point. Defaults 0.002. ultimate.y Maximum y-value post-linear region. ultimate.x Maximum x-value post-linear region. offset Y-value offset. toe.initial.y Intersection toe-region y-axis (adding offset). toe.initial.slope Initial slope toe region. toe.max.y End toe region. enob.x Effective number bits synthetic data x-range. determine number points returned data (.e. 2^enob.x). Also used adding quantization noise. enob.y Effective number bits synthetic data y-range. Used adding quantization noise. enob.x_FS Effective number bits full-scale x-range. Using determine level quantization/data-noise x-values. enob.y_FS Effective number bits full-scale y-range. Using determine level quantization/data-noise y-values. enob.x_noise Add noise x-data. Give effective number bits full-scale x-range. enob.y_noise Add noise y-data. Give effective number bits full-scale y-range. x.name Name x-values. Defaults \"strain\". y.name Name y-values. Defaults \"stress\". x.unit Unit x-values. Can NULL. y.unit Unit y-values. Can NULL. Defaults \"MPa\".","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synthesize Test Data — synthesize_test_data","text":"data.frame synthetic data. Units (provided)   given variable labels.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthesize Test Data — synthesize_test_data","text":"Synthesize Test Data","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Synthesize Test Data — synthesize_test_data","text":"random values drawn, set random seed beforehand get   reproducible results.","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Synthesize Test Data — synthesize_test_data","text":"Hill, H. N. (1944). Determination stress-strain relations   \" offset\" yield strength values. Aluminum Co America Pittsburgh Pa. Ramberg, W., & Osgood, W. R. (1943). Description Stress-Strain   Curves Three Parameters; National Advisory Committee Aeronautics   Technical Note. NACA-TN-902. Rice, R. C., Jackson, J. L., Bakuckas, J., & Thompson, S. (2003).   Metallic Materials Properties Development Standardization (MMPDS)   (DOT/FAA/AR-MMPDS-01).","code":""},{"path":"https://soylentorange.github.io/sdarr/reference/synthesize_test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthesize Test Data — synthesize_test_data","text":"","code":"# Synthesize a test record resembling Al 6060 T66 # (Values according to Metallic Material Properties Development and # Standardization (MMPDS) Handbook) Al_6060_T66 <- synthesize_test_data(slope = 68000,                                     yield.y = 160,                                     ultimate.y = 215,                                     ultimate.x = 0.091)  plot(x = Al_6060_T66$strain, y = Al_6060_T66$stress,      type = \"l\",      xlab = \"strain\", ylab = \"stress (in MPa)\")"}]
